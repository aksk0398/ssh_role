#file is being maintained by Puppet module ssh_config
# DO NOT EDIT

#       $OpenBSD: sshd_config,v 1.100 2016/08/15 12:32:04 naddy Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin

# Note that this configuration file explicitly specifies values
# for security critical parameters even where the default would
# typically be sufficient.

Protocol 2
#Port 22
#AddressFamily any
{% if sshd_listen_address == 'Array' %}
{% for address in sshd_listen_address %}
ListenAddress {{ address }}
{% endfor %}
{% elif  sshd_listen_address == 'String' %}
ListenAddress {{ sshd_listen_address  }}
{% endif %}

# Supported HostKey algorithms by order of preference. These should be
# supported on all modern openssh versions regardless of OS
# Based on recommendations at https://infosec.mozilla.org/guidelines/openssh
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

# Ciphers and keying
# Based on recommendations from https://infosec.mozilla.org/guidelines/openssh
#RekeyLimit default none
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

# Logging
#SyslogFacility AUTH
SyslogFacility {{ sshd_config_syslog_facility }}
LogLevel INFO

# Authentication:
LoginGraceTime 60
PermitRootLogin yes
StrictModes yes
MaxAuthTries 3
#MaxSessions 10

#PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# RhostsRSAAuthentication and HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
PermitEmptyPasswords no

# Change to no to disable s/key passwords.
ChallengeResponseAuthentication {{ sshd_config_challenge_resp_auth }}

# Kerberos options
KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication no
#GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication mechanism.
# Depending on your PAM configuration, this may bypass the setting of
# PasswordAuthentication, PermitEmptyPasswords, and
# "PermitRootLogin without-password". If you just want the PAM account and
# session checks to run without PAM authentication, then enable this but set
# ChallengeResponseAuthentication=no
UsePAM yes

AllowAgentForwarding no
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding no
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd yes
PrintLastLog yes
#TCPKeepAlive yes
#UseLogin no
UsePrivilegeSeparation sandbox
PermitUserEnvironment no
#Compression delayed

# Enforce idle timeout of 10 minutes
ClientAliveInterval 300
ClientAliveCountMax 2
#ShowPatchLevel no
UseDNS {{ sshd_config_use_dns }}

#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# Display legal notice prior to login
Banner /etc/issue

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
{#
Subsystem sftp {{ sshd_config_subsystem_sftp_real }}

{% if sshd_config_denyusers_real %}
DenyUsers {{ sshd_config_denyusers_real | unique | join(" ") }}
{% endif %}
{% if sshd_config_denygroups_real  %}
DenyGroups {{ sshd_config_denygroups_real | unique | join(" ") }}
{% endif %}

{% if sshd_config_allowusers_real  %}
AllowUsers {{ sshd_config_allowusers_real | unique | join(" ") }}
{% endif %}
{% if sshd_config_allowgroups_real  %}
AllowGroups {{ sshd_config_allowgroups_real | unique | join(" ") }}
{% endif %}

{% if sshd_config_key_revocation_list_real %}
RevokedKeys {{ sshd_config_key_revocation_list_real }}
{% endif %}

{% if sshd_config_hostcertificate_real == "Array" %}
{% for cert in sshd_config_hostcertificate_real %}
HostCertificate {{ cert }}
{%  endfor  %}
{% elif sshd_config_hostcertificate_real == "String"%}
HostCertificate {{ sshd_config_hostcertificate_real }}
{% endif %}

{% if sshd_config_trustedusercakeys_real %}
TrustedUserCAKeys {{sshd_config_trustedusercakeys_real }}
{% endif %}

{% if sshd_config_authorized_principals_file_real %}
AuthorizedPrincipalsFile {{ sshd_config_authorized_principals_file_real }}
{% endif %}

{% if sshd_config_match %}

{% for key,hash in  sshd_config_match.sort %}
Match {{ key }}
{% for values in hash %}
{{values}}
{% endfor %}
{% endfor %}
{% endif %}
#}
